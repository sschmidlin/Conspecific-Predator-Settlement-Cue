install.packages(rmarkdown)
install.packages("rmarkdown")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("knitr")
#set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # requires installation of package "rstudioapi"
install.packages('rstudioapi')
#set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # requires installation of package "rstudioapi"
data <- read.csv2(file="cue interactions data.csv", sep=",")
# Convert Cue and Tray Number to factor
colnames(data)[4] <- 'Well_Number'
colnames(data)[2] <- 'Age'
colnames(data)[3] <- 'Batch'
colnames(data)[5] <- 'Cue'
colnames(data)[6] <- 'Settled'
colnames(data)[7] <- 'Unattached'
data[, 'Cue'] <- as.factor(data[, 'Cue'])
mult_s <- rep(1:nrow(data), data[, 'Settled'])
mult_u <- rep(1:nrow(data), data[, 'Unattached'])
data_s <- data[mult_s,]
data_s[, 'Settled'] <- 1
data_s <- data_s[, !(names(data_s) %in% c('Unattached'))]
data_u <- data[mult_u,]
data_u[, 'Unattached'] <- 0
data_u <- data_u[, !(names(data_u) %in% c('Settled'))]
colnames(data_u)[6] <- 'Settled'
data <- rbind(data_s, data_u)
# Make new binary predictor variables from multilevel factor
# shell: sterilized vs. untreated
# conspecific cue: present vs. absent
# predator cue: present vs. absent
# Biofilm: present vs. absent
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data['biofilm'] <- data['Cue']
#this is the true/false way
data$Shell <- ifelse(grepl("conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$biofilm <- ifelse(grepl("biofilm", data$biofilm), TRUE, FALSE)
data$biofilm <-sub("TRUE", "present", data$biofilm)
data$biofilm <-sub("FALSE", "absent", data$biofilm)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
require(glmer)
install.packages('glmer')
# Make new binary predictor variables from multilevel factor
# shell: sterilized vs. untreated
# conspecific cue: present vs. absent
# predator cue: present vs. absent
# Biofilm: present vs. absent
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data['biofilm'] <- data['Cue']
#this is the true/false way
data$Shell <- ifelse(grepl("conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$biofilm <- ifelse(grepl("biofilm", data$biofilm), TRUE, FALSE)
data$biofilm <-sub("TRUE", "present", data$biofilm)
data$biofilm <-sub("FALSE", "absent", data$biofilm)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
??glmer
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- lme4::glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
View(data)
table(data[,'conspecific_cue', 'predator_cue'])
table(data[, c('conspecific_cue', 'predator_cue')])
table(data[, c('conspecific_cue', 'predator_cue', 'Batch', 'age')])
table(data[, c('conspecific_cue', 'predator_cue', 'Batch', 'Age')])
