install.packages(rmarkdown)
install.packages("rmarkdown")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("knitr")
#set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # requires installation of package "rstudioapi"
install.packages('rstudioapi')
#set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # requires installation of package "rstudioapi"
data <- read.csv2(file="cue interactions data.csv", sep=",")
# Convert Cue and Tray Number to factor
colnames(data)[4] <- 'Well_Number'
colnames(data)[2] <- 'Age'
colnames(data)[3] <- 'Batch'
colnames(data)[5] <- 'Cue'
colnames(data)[6] <- 'Settled'
colnames(data)[7] <- 'Unattached'
data[, 'Cue'] <- as.factor(data[, 'Cue'])
mult_s <- rep(1:nrow(data), data[, 'Settled'])
mult_u <- rep(1:nrow(data), data[, 'Unattached'])
data_s <- data[mult_s,]
data_s[, 'Settled'] <- 1
data_s <- data_s[, !(names(data_s) %in% c('Unattached'))]
data_u <- data[mult_u,]
data_u[, 'Unattached'] <- 0
data_u <- data_u[, !(names(data_u) %in% c('Settled'))]
colnames(data_u)[6] <- 'Settled'
data <- rbind(data_s, data_u)
# Make new binary predictor variables from multilevel factor
# shell: sterilized vs. untreated
# conspecific cue: present vs. absent
# predator cue: present vs. absent
# Biofilm: present vs. absent
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data['biofilm'] <- data['Cue']
#this is the true/false way
data$Shell <- ifelse(grepl("conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$biofilm <- ifelse(grepl("biofilm", data$biofilm), TRUE, FALSE)
data$biofilm <-sub("TRUE", "present", data$biofilm)
data$biofilm <-sub("FALSE", "absent", data$biofilm)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
require(glmer)
install.packages('glmer')
# Make new binary predictor variables from multilevel factor
# shell: sterilized vs. untreated
# conspecific cue: present vs. absent
# predator cue: present vs. absent
# Biofilm: present vs. absent
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data['biofilm'] <- data['Cue']
#this is the true/false way
data$Shell <- ifelse(grepl("conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$biofilm <- ifelse(grepl("biofilm", data$biofilm), TRUE, FALSE)
data$biofilm <-sub("TRUE", "present", data$biofilm)
data$biofilm <-sub("FALSE", "absent", data$biofilm)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
??glmer
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- lme4::glmer(Settled ~ conspecific_cue + predator_cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
View(data)
table(data[,'conspecific_cue', 'predator_cue'])
table(data[, c('conspecific_cue', 'predator_cue')])
table(data[, c('conspecific_cue', 'predator_cue', 'Batch', 'age')])
table(data[, c('conspecific_cue', 'predator_cue', 'Batch', 'Age')])
setwd("~/GitHub/")
data <- read.csv2(file="Experiment 1 data1.csv", sep=",")
install.packages("dplyr")
library(dplyr)
install.packages("Matrix")
install.packages("lme4")
install.packages("ggeffects")
library(Matrix)
library(lme4)
library(ggeffects)
#deleting 10hr, 20hr data
data <- select(data, -settled_10hrs, -unattached_10hrs, -settled_20hrs, -unattached_20hrs)
colnames(data)[5] <- 'Settled'
colnames(data)[6] <- 'Unattached'
mult_s <- rep(1:nrow(data), data[, 'Settled'])
mult_u <- rep(1:nrow(data), data[, 'Unattached'])
data_s <- data[mult_s,]
data_s[, 'Settled'] <- 1
data_s <- data_s[, !(names(data_s) %in% c('Unattached'))]
data_u <- data[mult_u,]
data_u[, 'Unattached'] <- 0
data_u <- data_u[, !(names(data_u) %in% c('Settled'))]
colnames(data_u)[5] <- 'Settled'
data <- rbind(data_s, data_u)
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data$Shell <- ifelse(grepl("Conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
#making model
model <- glmer(Settled ~ predator_cue + conspecific_cue +(1 | Larvae.batch) + (1 | Larvae.age) + (1 | Crab), data = data, family = binomial)
model2 <-glmer(Settled ~ Shell + conspecific_cue + (1 | Larvae.batch) + (1 | Larvae.age) + (1 | Crab), data = data, family = binomial)
summary(model)
setwd("~/GitHub/Conspecific-Predator-Settlement-Cue")
data <- read.csv2(file="Experiment March 2022.csv", sep=",")
#deleting 10hr, 20hr data
data <- select(data, -settled_10hrs, -unattached_10hrs, -settled_20hrs, -unattached_20hrs)
colnames(data)[5] <- 'Settled'
colnames(data)[6] <- 'Unattached'
mult_s <- rep(1:nrow(data), data[, 'Settled'])
mult_u <- rep(1:nrow(data), data[, 'Unattached'])
data_s <- data[mult_s,]
data_s[, 'Settled'] <- 1
data_s <- data_s[, !(names(data_s) %in% c('Unattached'))]
data_u <- data[mult_u,]
data_u[, 'Unattached'] <- 0
data_u <- data_u[, !(names(data_u) %in% c('Settled'))]
colnames(data_u)[5] <- 'Settled'
data <- rbind(data_s, data_u)
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data$Shell <- ifelse(grepl("Conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
data$Larvae.batch <- as.factor(data$Larvae.batch)
data$Larvae.age <- as.factor(data$Larvae.age)
data$Shell <-as.factor(data$Shell)
data <- subset(data, Shell == "sterilized")
#making model
model <- glmer(Settled ~conspecific_cue * predator_cue + (1| Larvae.batch) + (1| Larvae.age) + (1 | Crab), data = data, family = binomial)
summary(model)
#visualizing model
m <- ggpredict(model, terms = c("conspecific_cue", "predator_cue"))
setwd("~/GitHub/")
data <- read.csv2(file="Experiment 1 NewData.csv", sep=",")
#deleting 10hr, 20hr data
data <- select(data, -settled_10hr, -unattached_10hr, -settled_20hr, -unattached_20hr)
colnames(data)[5] <- 'Settled'
colnames(data)[6] <- 'Unattached'
# 1. Calculate response variable from input data
# Multiply rows by number of larvae per well for settled and unattached and concatenate the resulting dataframes
mult_s <- rep(1:nrow(data), data[, 'Settled'])
mult_u <- rep(1:nrow(data), data[, 'Unattached'])
data_s <- data[mult_s,]
data_s[, 'Settled'] <- 1
data_s <- data_s[, !(names(data_s) %in% c('Unattached'))]
data_u <- data[mult_u,]
data_u[, 'Unattached'] <- 0
data_u <- data_u[, !(names(data_u) %in% c('Settled'))]
colnames(data_u)[5] <- 'Settled'
data <- rbind(data_s, data_u)
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data$Shell <- ifelse(grepl("conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
#making model
model <- glmer(Settled ~ conspecific_cue + predator_cue + (1 | Larvae.batch) + (1 | Larvae.age), data = data, family = binomial)
summary(model)
#making model
model <- glmer(Settled ~ conspecific_cue * predator_cue + (1 | Larvae.batch) + (1 | Larvae.age), data = data, family = binomial)
#making model
model <- glmer(Settled ~ conspecific_cue * predator_cue + (1 | Larvae.batch) + (1 | Larvae.age), data = data, family = binomial)
model <- glmer(Settled ~ conspecific_cue + predator_cue + Biofilm + conspecific_cue:predator_cue + conspecific_cue:Biofilm + predator_cue:Biofilm + (1 | Larvae.age), data = data, family = binomial)
#making model
model <-glmer(Settled ~ conspecific_cue + predator_cue + Shell + conspecific_cue:predator_cue + conspecific_cue:Shell + predator_cue:Shell + (1 | Larvae.age) + (1 | Larvae.batch), data = data, family = binomial)
summary(model)
setwd("~/GitHub/Conspecific-Predator-Settlement-Cue")
data <- read.csv2(file="Cue interactions 08-2022.csv", sep=",")
# Convert Cue and Tray Number to factor
colnames(data)[4] <- 'Well_Number'
colnames(data)[2] <- 'Age'
colnames(data)[3] <- 'Batch'
colnames(data)[5] <- 'Cue'
colnames(data)[6] <- 'Settled'
colnames(data)[7] <- 'Unattached'
data[, 'Cue'] <- as.factor(data[, 'Cue'])
mult_s <- rep(1:nrow(data), data[, 'Settled'])
mult_u <- rep(1:nrow(data), data[, 'Unattached'])
data_s <- data[mult_s,]
data_s[, 'Settled'] <- 1
data_s <- data_s[, !(names(data_s) %in% c('Unattached'))]
data_u <- data[mult_u,]
data_u[, 'Unattached'] <- 0
data_u <- data_u[, !(names(data_u) %in% c('Settled'))]
colnames(data_u)[6] <- 'Settled'
data <- rbind(data_s, data_u)
# Make new binary predictor variables from multilevel factor
# shell: sterilized vs. untreated
# conspecific cue: present vs. absent
# predator cue: present vs. absent
# Biofilm: present vs. absent
data['Shell'] <- data['Cue']
data['conspecific_cue'] <- data['Cue']
data['predator_cue'] <- data['Cue']
data['biofilm'] <- data['Cue']
#this is the true/false way
data$Shell <- ifelse(grepl("conspecific shell", data$Shell), TRUE, FALSE)
data$conspecific_cue <- ifelse(grepl("conspecific cue", data$conspecific_cue), TRUE, FALSE)
data$predator_cue <- ifelse(grepl("predator cue", data$predator_cue), TRUE, FALSE)
data$biofilm <- ifelse(grepl("biofilm", data$biofilm), TRUE, FALSE)
data$biofilm <-sub("TRUE", "present", data$biofilm)
data$biofilm <-sub("FALSE", "absent", data$biofilm)
data$Shell <-sub("TRUE", "untreated", data$Shell)
data$Shell <-sub("FALSE", "sterilized", data$Shell)
data$predator_cue <-sub("TRUE", "present", data$predator_cue)
data$predator_cue <-sub("FALSE", "absent", data$predator_cue)
data$conspecific_cue <-sub("TRUE", "present", data$conspecific_cue)
data$conspecific_cue <-sub("FALSE", "absent", data$conspecific_cue)
# 3. Make a statistical model based on (conspecific vs predator cues)
model <- glmer(Settled ~ conspecific_cue * predator_cue + Shell +  biofilm + (1 | Batch) + (1 | Age), data = data, family = binomial)
model2 <- glmer(Settled ~ conspecific_cue * predator_cue + Shell *  biofilm + (1 | Batch) + (1 | Age), data = data, family = binomial)
# Testing model assumptions
testDispersion(model)
simulationOutput <- simulateResiduals(fittedModel = model, plot = F)
plot(simulationOutput)
# Test model
summary(model)
summary(model2)
m <- ggpredict(model, terms = c("conspecific_cue", "predator_cue"))
plot(m)
m2 <- ggpredict(model, terms = c("Shell", "conspecific_cue"))
plot(m2)
m02<- ggpredict(model2, terms = ("Cue$CS", "Cue$CC-SS", "Cue$B-SS"))
m0<- ggpredict(model2, terms = ('Cue'))
levels(data$Cue) <- c("B-CC-CS", "B-CC-PC-CS", "B-CC-PC-SS", "B-CC-SS", "B-CS", "B-PC-CS", "B-PC-SS", "B-SS", "CC-CS", "CC-PC-CS", "CC-PC-SS", "CC-SS", "CS", "PC-CS", "PC-SS", "SS")
model2 <- glmer(Settled ~ Cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
m0<- ggpredict(model2, terms = ('Cue'))
plot(m0)
summary(model2)
car::Anova(model3, type=2)
car::Anova(model2, type=2)
marginal <-lsmeans(model2, ~ Cue)
pairs(marginal, adjust="tukey")
library(lsmeans)
car::Anova(model2, type=2)
marginal <-lsmeans(model2, ~ Cue)
pairs(marginal, adjust="tukey")
plot(m0) +
labs(x = 'Cue',
y= 'Larvae Settled (%)',
title = "") +
scale_color_manual(breaks = c("absent", "present")
, labels= c("Absent", "Present"),
values = c("chartreuse4", "orangered4"))+
theme(legend.title = element_text(size = 20),
axis.title = element_text(size = 20),
axis.text = element_text(size = 20))+
scale_y_continuous(labels= function(x) paste0(x*100), limits = c(0,1))
model2 <- glmer(Settled ~ Cue + (1 | Batch) + (1 | Age), data = data, family = binomial)
m0<- ggpredict(model2, terms = ('Cue'))
plot(m0)
summary(model2)
car::Anova(model2, type=2)
marginal <-lsmeans(model2, ~ Cue)
pairs(marginal, adjust="tukey")
plot(m0) +
labs(x = 'Cue',
y= 'Larvae Settled (%)',
title = "") +
scale_color_manual(breaks = c("absent", "present")
, labels= c("Absent", "Present"),
values = c("chartreuse4", "orangered4"))+
theme(legend.title = element_text(size = 20),
axis.title = element_text(size = 20),
axis.text = element_text(size = 20))+
scale_y_continuous(labels= function(x) paste0(x*100), limits = c(0,1))
require(DHARMa)
install.packages('DHARMa')
install.packages("DHARMa")
